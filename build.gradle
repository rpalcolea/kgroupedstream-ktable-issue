import org.apache.tools.ant.filters.ReplaceTokens
import java.util.concurrent.TimeUnit

buildscript {
  repositories {
    mavenCentral()
    maven { url "https://repo.spring.io/snapshot" }
    maven { url "https://repo.spring.io/milestone" }
    maven { url "https://plugins.gradle.org/m2/" }
    mavenLocal()
    jcenter()
  }
  dependencies {
    classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
    classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
    classpath 'org.ajoberstar:gradle-git:1.1.0'
    classpath "com.avast.gradle:docker-compose-gradle-plugin:0.4.3"

  }
}


plugins {
  id 'com.jfrog.artifactory' version '4.1.1'
}

apply plugin: 'idea'
apply plugin: 'base'
apply plugin: 'application'
apply plugin: 'groovy'
apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'maven'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

defaultTasks 'clean', 'build'

tasks.distTar.enabled = false
tasks.distZip.enabled = false

sourceCompatibility = 1.8

mainClassName = 'streams.StreamAggregatorApplication'

compileKotlin {
  kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
  kotlinOptions.jvmTarget = "1.8"
}

repositories {
  mavenCentral()
  maven { url "https://repo.spring.io/snapshot" }
  maven { url "https://repo.spring.io/milestone" }
}

clean {
  delete "logs"
}


dependencies {
  compile('org.springframework.boot:spring-boot-starter-web')
  compile("org.springframework.boot:spring-boot-starter-actuator")
  compile("org.springframework.boot:spring-boot-starter-webflux")
  compile("org.jetbrains.kotlin:kotlin-stdlib-jre8:${kotlinVersion}")
  compile("org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}")
  runtime('org.springframework.boot:spring-boot-devtools')
  compile("io.reactivex:rxkotlin:${rxKotlinVersion}")
  compile("io.prometheus:simpleclient_spring_boot:${prometheusVersion}")
  compile("io.prometheus:simpleclient_servlet:${prometheusVersion}")
  compile("io.prometheus:simpleclient_hotspot:${prometheusVersion}")
  compile("org.apache.kafka:connect-runtime:${kafkaVersion}")
  compile("org.apache.kafka:connect-api:${kafkaVersion}")
  compile("org.apache.kafka:kafka-streams:0.11.1.0-SNAPSHOT")
  testCompile "com.github.tomakehurst:wiremock:${wiremockVersion}"
  testCompile('org.springframework.boot:spring-boot-starter-test')
  testCompile("org.spockframework:spock-spring:${spockSpringVersion}")
  testCompile "com.github.rholder:guava-retrying:${guavaRetryVersion}"
}

processResources {
  filter ReplaceTokens, tokens: [APPLICATION_VERSION: project.version]
}


task wrapper(type: Wrapper) {
  gradleVersion = '4.0'
}


configurations.all {
  exclude group: 'org.slf4j', module: 'slf4j-log4j12'
}